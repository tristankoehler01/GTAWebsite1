@page
@model IndexModel
@{
    ViewData["Title"] = "UMKC: Apply for Graduate Teaching";
}

<style>
    .group-block {
        display:flex;
        background-color:#0173bc;
        float:left;
        color: white;
        margin:5px;
        padding:10px;
        align-items:center;
        justify-content:center;
        text-align:center;
        width:100px;
        height:100px;
        flex-direction:column
    }

    .area {
        display: inline-flex;
        margin: auto
    }

    .area#area2 {
       display: grid;
       grid-template-columns: repeat(6, 1fr);
       overflow-y: scroll;
       height: 400px; /* set the height to enable scroll */
    }


    select {
        width: 200px;
        height: 40px;
    }
</style>

<h1>Open Courses</h1>
<div class="area" id="area1" style="float:left; flex-direction:column">
    @{
        SelectList posItems = new SelectList(Models.Menu.positions, Models.Menu.positions.ElementAt(0));
        SelectList qualItems = new SelectList(Models.Menu.qualifications, Models.Menu.qualifications.ElementAt(0));
        SelectList courseItems = new SelectList(Models.Menu.courses, Models.Menu.courses.ElementAt(0));
        SelectList semesterItems = new SelectList(Models.Menu.semesters, Models.Menu.semesters.ElementAt(0));
        <div>Position</div>
        <div class="col-lg-9">
            <div class="col-sm-2 col-form-label">@Html.DropDownList("positions", posItems)</div>
            <br />
            <div>Qualification</div>
            <div class="col-sm-2 col-form-label">@Html.DropDownList("qualifications", qualItems)</div>
            <br />
            <div>Course</div>
            <div class="col-sm-2 col-form-label">@Html.DropDownList("courses", courseItems)</div>
            <br />
            <div>Semester</div>
            <div class="col-sm-2 col-form-label">@Html.DropDownList("semesters", semesterItems)</div>
            <br />
        </div>
        <button type="button" class="btn btn-primary" onclick="displayGroups()">Apply</button>
    }
</div>
<div class="area" id="area2" style="float:right; flex-wrap:wrap; overflow-y:scroll"></div>

<script>
    document.getElementById("area2").onload = displayGroups();
    function displayGroups() {
        document.getElementById("area2").innerHTML = "";
        var coursesShown = []
        var selectableCourses = @Json.Serialize(GTAWebsite.Pages.IndexModel.Course);
        for (i in selectableCourses) {
            let hasCourse = false;
            if (selectableCourses[i].courseName == document.getElementById("courses").value || document.getElementById("courses").value == "Any") {
                hasCourse = true;
            }

            let hasPos = false;
            if (selectableCourses[i].positionName == document.getElementById("positions").value || document.getElementById("positions").value == "Any") {
                hasPos = true;
            }

            let hasQual = false;
            if (selectableCourses[i].qualificationName == document.getElementById("qualifications").value || document.getElementById("qualifications").value == "Any") {
                hasQual = true;
            }

            let hasSem = false;
            if (selectableCourses[i].semester == document.getElementById("semesters").value || document.getElementById("semesters").value == "Any") {
                hasSem = true;
            }

            if (hasCourse && hasPos && hasQual && hasSem) {
                coursesShown.push(selectableCourses[i]);
            }
        }


        let text = "";
        if (coursesShown.length == 0) {
            text = "No results found.";
        }
        else {
            for (let i in coursesShown) {
                text += "<div class='group-block' id='" + i.toString() + "'>" + coursesShown[i].courseName + "<a href='./More' type='button' style='background-color:#005293' class='btn btn-primary' onclick='pass(" + JSON.stringify(coursesShown[i]) + ")'>More</a></div>";
            }
        }

        document.getElementById("area2").innerHTML = text;
        
    }

    function pass(c) {
        if (localStorage.getItem("object") == null) {
            localStorage.setItem("object", JSON.stringify(c));
        }
        else {
            localStorage.removeItem("object");
            localStorage.setItem("object", JSON.stringify(c));
        }
    }
</script>
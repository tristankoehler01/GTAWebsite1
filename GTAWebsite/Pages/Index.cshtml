@page
@model IndexModel
@{
    ViewData["Title"] = "UMKC: Apply for Graduate Teaching";
}

<style>
    .group-block {
        display:flex;
        background-color:#005293;
        float:left;
        color: white;
        margin:10px;
        padding:5px;
        align-items:center;
        justify-content:center;
        text-align:center;
        width:200px;
        height:200px;
        flex-direction:column
    }

    .area {
        display:flex;
        float:right;
    }
</style>

@{
    SelectList posItems = new SelectList(Models.Menu.positions, Models.Menu.positions.ElementAt(0));
    <div>Position</div>
    <div>@Html.DropDownList("positions", posItems)</div>
    SelectList qualItems = new SelectList(Models.Menu.qualifications, Models.Menu.qualifications.ElementAt(0));
    <div>Qualification</div>
    <div>@Html.DropDownList("qualifications", qualItems)</div>
    SelectList courseItems = new SelectList(Models.Menu.courses, Models.Menu.courses.ElementAt(0));
    <div>Course</div>
    <div>@Html.DropDownList("courses", courseItems)</div>
    <button type="button" class="btn btn-primary" onclick="displayGroups()">Submit</button>
    <div class="area" id="area"></div>

}

<script>
    function displayGroups() {
        document.getElementById("area").innerHTML = "";
        var coursesShown = []
        var selectableCourses = @Json.Serialize(GTAWebsite.Pages.IndexModel.Course);
        for (i in selectableCourses) {
            let hasCourse = false;
            if (selectableCourses[i].courseName == document.getElementById("courses").value || document.getElementById("courses").value == "Any") {
                hasCourse = true;
            }

            let hasPos = false;
            if (selectableCourses[i].positionName == document.getElementById("positions").value || document.getElementById("positions").value == "Any") {
                hasPos = true;
            }

            let hasQual = false;
            if (selectableCourses[i].qualificationName == document.getElementById("qualifications").value || document.getElementById("qualifications").value == "Any") {
                hasQual = true;
            }

            if (hasCourse && hasPos && hasQual) {
                coursesShown.push(selectableCourses[i]);
                console.log("success");
            }
        }


        let text = "";
        if (coursesShown.length == 0) {
            text = "No results found";
        }
        else {
            for (let i in coursesShown) {
            text += "<div class='group-block'>" + coursesShown[i].courseName + "<a href='./Form' type='button' class='btn btn-primary'>More</a></div>";
            }
        }

        document.getElementById("area").innerHTML = text;
    }
</script>